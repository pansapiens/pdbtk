name: Build and Release

on:
  push:
    tags:
      - 'v*.*'
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Build for multiple platforms in parallel
        include:
          - goos: linux
            goarch: amd64
            output: pdbtk-linux-amd64
          - goos: linux
            goarch: arm64
            output: pdbtk-linux-arm64
          - goos: darwin
            goarch: arm64
            output: pdbtk-darwin-arm64
          - goos: windows
            goarch: amd64
            output: pdbtk-windows-amd64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        go build -ldflags="-s -w" -o ${{ matrix.output }} .
        # Compress the binary to reduce size (skip macOS due to UPX limitations)
        if command -v upx >/dev/null 2>&1 && [ "${{ matrix.goos }}" != "darwin" ]; then
          upx --best ${{ matrix.output }}
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.output }}
        path: ${{ matrix.output }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create checksums
      run: |
        cd artifacts
        find . -name "pdbtk-*" -type f -exec sha256sum {} \; > checksums.txt

    - name: Upload release assets
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/pdbtk-*
          artifacts/checksums.txt
        draft: false
        prerelease: false
